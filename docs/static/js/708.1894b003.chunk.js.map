{"version":3,"file":"static/js/708.1894b003.chunk.js","mappings":"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","sources":["components/atoms/NumberInput.tsx","components/atoms/StatIcon.tsx","components/molecules/NumberOption.tsx","components/molecules/SubstatInput.tsx","components/molecules/RangeInput.tsx","components/molecules/FormulaDisplay.tsx","utils/func/Sort.ts","utils/consts/Mainstat.ts","components/organisms/ArtifactCard.tsx","components/atoms/SetIcon.tsx","components/molecules/SetInput.tsx","components/organisms/SortInput.tsx","utils/consts/Slot.ts","components/molecules/SlotOptions.tsx","components/molecules/WeightInput.tsx","components/organisms/FormulaEditor.tsx","pages/Editor.tsx","utils/consts/Artifact.ts"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\n\r\nimport { SxProps, TextField, useTheme } from \"@mui/material\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { useState } from \"react\";\r\n\r\ntype NumberInputProps = {\r\n  value: number;\r\n  setValue: (value: number) => void;\r\n  min?: number;\r\n  max?: number;\r\n  sx?: SxProps;\r\n};\r\nexport const NumberInput = ({\r\n  value,\r\n  setValue,\r\n  min,\r\n  max,\r\n  sx,\r\n}: NumberInputProps) => {\r\n  const theme = useTheme();\r\n  const [inValue, setInValue] = useState(value);\r\n\r\n  return (\r\n    <TextField\r\n      type=\"number\"\r\n      variant=\"standard\"\r\n      style={{\r\n        background: theme.palette.local.paper,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        borderRadius: 4,\r\n      }}\r\n      sx={sx}\r\n      css={fontTypes(theme).disc}\r\n      value={isNaN(value) ? inValue : value}\r\n      onChange={(e) => {\r\n        setInValue(parseFloat(e.target.value));\r\n        if (e.target.value !== \"\") setValue(parseFloat(e.target.value));\r\n        else setValue(0);\r\n      }}\r\n      onFocus={(event) => {\r\n        event.target.select();\r\n      }}\r\n      InputProps={{ disableUnderline: true }}\r\n      inputProps={{\r\n        min: min,\r\n        max: max,\r\n        inputMode: \"numeric\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, SxProps, Typography, useTheme } from \"@mui/material\";\r\nimport { TFunction } from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { statDef, statKeyType } from \"../../utils/consts/Stat\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport FontAwesomeSvgIcon from \"./FontAwesomeSvgIcon\";\r\n\r\ntype StatIconProps = {\r\n  statKey: statKeyType;\r\n  sx?: SxProps;\r\n  value?: number;\r\n  size?: number;\r\n  full?: boolean;\r\n};\r\n\r\nexport const StatValue2Str = (\r\n  t: TFunction,\r\n  statKey: statKeyType,\r\n  value?: number,\r\n  full?: boolean\r\n) => {\r\n  let text = t(\r\n    `artifact:${\r\n      full === undefined ? \"substatusAbbr\" : \"substatusFull\"\r\n    }.${statKey}`\r\n  ) as string;\r\n  if (value !== undefined) {\r\n    if (text.charAt(text.length - 1) === \"%\") {\r\n      text = text.slice(0, -1);\r\n      text += `+${value.toFixed(1)}%`;\r\n    } else {\r\n      text += `+${value.toFixed(0)}`;\r\n    }\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const StatIcon = (props: StatIconProps) => {\r\n  const { statKey, sx, value, size, full } = props;\r\n  const theme = useTheme();\r\n  const { t } = useTranslation(\"artifact\");\r\n  const text = StatValue2Str(t, statKey, value, full);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      gap={1}\r\n      sx={sx}\r\n      fontSize={size ? size : 14}\r\n    >\r\n      {statDef[statKey].icon !== undefined ? (\r\n        <FontAwesomeSvgIcon\r\n          icon={statDef[statKey].icon}\r\n          style={{ fontSize: \"inherit\" }}\r\n        />\r\n      ) : null}\r\n      <Typography\r\n        css={[fontTypes(theme).disc, { color: \"inherit\", fontSize: \"inherit\" }]}\r\n      >\r\n        {text}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { faArrowUpWideShort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useState } from \"react\";\r\nimport { NumberInput } from \"../atoms/NumberInput\";\r\n\r\ntype NumberOptionProps = {\r\n  value: number;\r\n  setValue: (value: number) => void;\r\n  options: number[];\r\n  displayRaw?: boolean;\r\n};\r\n\r\n//Display value will be rounded!\r\n//x < 10 digit 1 after decimal point\r\n//x > 10 integer\r\n\r\nexport const NumberOption = (props: NumberOptionProps) => {\r\n  const { value, setValue, options, displayRaw } = props;\r\n  const theme = useTheme();\r\n  const disc = css([\r\n    fontTypes(theme).disc,\r\n    { textTransform: \"none\", color: theme.palette.com.white },\r\n  ]);\r\n\r\n  const DisplayRounded = (value: number) => {\r\n    if (displayRaw === undefined || displayRaw === false) {\r\n      if (value < 10) {\r\n        return value.toFixed(1);\r\n      } else {\r\n        return value.toFixed(0);\r\n      }\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const InputRounded = (value: number) => {\r\n    if (displayRaw === undefined || displayRaw === false) {\r\n      if (value < 10) {\r\n        return Math.round(value * 10) / 10;\r\n      } else {\r\n        return Math.round(value);\r\n      }\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonGroup\r\n      variant=\"contained\"\r\n      aria-label=\"outlined primary button group\"\r\n      sx={{ height: 32, flexGrow: 1 }}\r\n      css={disc}\r\n    >\r\n      <NumberInput value={value} setValue={setValue} sx={{ width: 48 }} />\r\n      {options.map((option, i) => (\r\n        <Button\r\n          key={i}\r\n          onClick={() => setValue(InputRounded(option))}\r\n          css={(fontTypes(theme).disc, { color: theme.palette.com.white })}\r\n          sx={{\r\n            bgcolor: theme.palette.com.main[200 + i * 100],\r\n            \":focus\": {\r\n              bgcolor: theme.palette.local.bg,\r\n            },\r\n            borderRadius: i === 0 ? 0 : \"inherit\",\r\n            flexGrow: 1,\r\n            px: 0,\r\n          }}\r\n        >\r\n          {DisplayRounded(option)}\r\n        </Button>\r\n      ))}\r\n    </ButtonGroup>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SxProps,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { NumberOption } from \"./NumberOption\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { substatKey, substatKeyType } from \"../../utils/consts/Substat\";\r\nimport { statDef, statKeyType } from \"../../utils/consts/Stat\";\r\nimport { StatIcon } from \"../atoms/StatIcon\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CSSProperties } from \"react\";\r\n\r\ntype SubstatInputProps = {\r\n  setKey: (value: substatKeyType) => void;\r\n  key_: substatKeyType;\r\n  setValue: (value: number) => void;\r\n  value: number;\r\n};\r\ntype StatKeyInputProps = {\r\n  setKey: (value: statKeyType) => void;\r\n  label?: string;\r\n  keys?: string[];\r\n  key_: statKeyType;\r\n  full?: boolean;\r\n  sx?: CSSProperties;\r\n};\r\n\r\nexport const StatKeyInput = (props: StatKeyInputProps) => {\r\n  const { setKey, key_, keys, label, sx, full } = props;\r\n  const theme = useTheme();\r\n  const { t } = useTranslation(\"artifact\");\r\n  const r = Math.random();\r\n  return (\r\n    <FormControl variant=\"standard\" sx={sx}>\r\n      <InputLabel\r\n        id={`stat-input${r}-label`}\r\n        css={[fontTypes(theme).disc, { color: theme.palette.com.white }]}\r\n        sx={{\r\n          pl: 1,\r\n          pt: 0.5,\r\n          zIndex: 1,\r\n          pointerEvents: \"none\",\r\n        }}\r\n        disableAnimation\r\n      >\r\n        {label ? label : t(\"substat\")}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={`stat-input${r}-label`}\r\n        id={`stat-input${r}`}\r\n        value={key_}\r\n        variant=\"standard\"\r\n        size=\"small\"\r\n        label={label ? label : t(\"substat\")}\r\n        css={[fontTypes(theme).disc, { color: theme.palette.com.white }]}\r\n        sx={{\r\n          bgcolor:\r\n            key_ === \"\"\r\n              ? theme.palette.com.main[500]\r\n              : theme.palette.com.main.L500,\r\n          pl: 1,\r\n          pt: 0.5,\r\n          borderRadius: 0.5,\r\n          color: theme.palette.com.white,\r\n          height: 32,\r\n        }}\r\n        onChange={(e) =>\r\n          e.target.value !== undefined &&\r\n          setKey(e.target.value as substatKeyType)\r\n        }\r\n        disableUnderline\r\n      >\r\n        {(keys ? keys : substatKey).map((key, i) => {\r\n          return (\r\n            <MenuItem\r\n              key={i}\r\n              value={key}\r\n              css={fontTypes(theme).disc}\r\n              sx={{ minHeight: 0, display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <StatIcon statKey={key} full={full} />\r\n              {/* {substatDef[key].name} */}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const SubstatInput = (props: SubstatInputProps) => {\r\n  const { setKey, key_, setValue, value } = props;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box display=\"flex\" sx={{ mb: 1 }} alignItems=\"flex-end\">\r\n      <StatKeyInput\r\n        setKey={setKey as (value: statKeyType) => void}\r\n        key_={key_}\r\n        sx={{ width: 128 }}\r\n      />\r\n      <NumberOption\r\n        value={value}\r\n        setValue={setValue}\r\n        options={statDef[key_].table as any as number[]}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, Slider, Typography, useTheme } from \"@mui/material\";\r\nimport { css } from \"@emotion/react\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { useState } from \"react\";\r\n\r\ntype RangeInputProps = {\r\n  name: string;\r\n  min: number;\r\n  max: number;\r\n  value: number[];\r\n  setValue: (value: number[]) => void;\r\n};\r\nexport const RangeInput = (props: RangeInputProps) => {\r\n  const { name, min, max, value, setValue } = props;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      height={32}\r\n      alignItems=\"center\"\r\n      px={1}\r\n      sx={{ background: theme.palette.local.paper }}\r\n      gap={1}\r\n      borderRadius={1}\r\n    >\r\n      <Typography\r\n        css={[fontTypes(theme).disc, { minWidth: 126 }]}\r\n      >{`${name}: ${value[0]} ~ ${value[1]}`}</Typography>\r\n      <Box display=\"flex\" flexGrow={1} alignItems=\"center\" px={1}>\r\n        <Slider\r\n          step={1}\r\n          min={min}\r\n          max={max}\r\n          value={value}\r\n          onChange={(e, newValue) => setValue(newValue as number[])}\r\n          valueLabelDisplay=\"auto\"\r\n          sx={{ color: theme.palette.com.main[\"A100\"] }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { EditorContext } from \"../../utils/contexts/EditorContext\";\r\nimport { substatKey } from \"../../utils/consts/Substat\";\r\n\r\nexport const FormulaDisplay = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation([\"artifact\", \"editor\"]);\r\n  const { weight, formulaEditor } = useContext(EditorContext);\r\n\r\n  const scoreFormula = useMemo(() => {\r\n    let firstTime = true;\r\n    return substatKey.map((key) => {\r\n      let w = weight[key];\r\n      if (w !== undefined && w !== 0) {\r\n        let headStr = \" + \";\r\n        if (firstTime) {\r\n          headStr = \"\";\r\n          firstTime = false;\r\n        }\r\n        if (w !== 1) headStr += `${w}×`;\r\n        return headStr + t(`substatusAbbr.${key}`);\r\n      }\r\n    });\r\n  }, [weight, t]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      py={0.75}\r\n      sx={{ background: theme.palette.local.paper, cursor: \"pointer\" }}\r\n      gap={1}\r\n      borderRadius={1}\r\n      onClick={() => formulaEditor.setOpen(true)}\r\n    >\r\n      <Typography css={fontTypes(theme).disc}>\r\n        {`${t(\"editor:artifact.score\")} = `}\r\n        {scoreFormula}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","export const toSortKeyScore = (value: string) => {\r\n  return value === \"minScore\" || value === \"avgScore\" || value === \"maxScore\"\r\n    ? value\r\n    : \"avgScore\";\r\n};\r\n","export const mainstatKey = [\r\n  \"\",\r\n  \"hp\",\r\n  \"hp_\",\r\n  \"atk\",\r\n  \"atk_\",\r\n  \"def_\",\r\n  \"eleMas\",\r\n  \"enerRech_\",\r\n  \"heal_\",\r\n  \"critRate_\",\r\n  \"critDMG_\",\r\n  \"physical_dmg_\",\r\n  \"anemo_dmg_\",\r\n  \"geo_dmg_\",\r\n  \"electro_dmg_\",\r\n  \"hydro_dmg_\",\r\n  \"pyro_dmg_\",\r\n  \"cryo_dmg_\",\r\n  \"dendro_dmg_\",\r\n];\r\n\r\n//data from https://genshin-impact.fandom.com/wiki/Artifact/Scaling\r\nconst elemDMG5 = [\r\n  7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8,\r\n  32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6,\r\n];\r\nconst phyDMG5 = [\r\n  8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9,\r\n  43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3,\r\n];\r\nconst elemDMG4 = [\r\n  6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7,\r\n  29.5, 31.3, 33.0, 34.8,\r\n];\r\nconst phyDMG4 = [\r\n  7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6,\r\n  36.8, 39.1, 41.3, 43.5,\r\n];\r\nconst elemDMG3 = [\r\n  5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1,\r\n];\r\nconst phyDMG3 = [\r\n  6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8,\r\n];\r\nconst elemDMG2 = [4.2, 5.4, 6.6, 7.8, 9];\r\nconst phyDMG2 = [5.2, 6.7, 8.2, 9.7, 11.2];\r\nconst elemDMG1 = [3.1, 4.3, 5.5, 6.7, 7.9];\r\nconst phyDMG1 = [3.9, 5.4, 6.9, 8.4, 9.9];\r\n\r\nexport const mainstatValueTable = {\r\n  5: {\r\n    hp: [\r\n      717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952,\r\n      3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780,\r\n    ],\r\n    hp_: elemDMG5,\r\n    atk: [\r\n      47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232,\r\n      245, 258, 272, 285, 298, 311,\r\n    ],\r\n    atk_: elemDMG5,\r\n    def_: phyDMG5,\r\n    eleMas: [\r\n      28.0, 35.9, 43.8, 51.8, 59.7, 67.6, 75.5, 83.5, 91.4, 99.3, 107.2, 115.2,\r\n      123.1, 131.0, 138.9, 146.9, 154.8, 162.7, 170.6, 178.6, 186.5,\r\n    ],\r\n    enerRech_: [\r\n      7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0,\r\n      34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8,\r\n    ],\r\n    heal_: [\r\n      5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.1, 23.7,\r\n      25.2, 26.7, 28.2, 29.8, 31.3, 32.8, 34.3, 35.9,\r\n    ],\r\n    critRate_: [\r\n      4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5,\r\n      21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1,\r\n    ],\r\n    critDMG_: [\r\n      9.3, 12.0, 14.6, 17.3, 19.9, 22.5, 25.2, 27.8, 30.5, 33.1, 35.7, 38.4,\r\n      41.0, 43.7, 46.3, 49.0, 51.6, 54.2, 56.9, 59.6, 62.2,\r\n    ],\r\n    physical_dmg_: phyDMG5,\r\n    anemo_dmg_: elemDMG5,\r\n    geo_dmg_: elemDMG5,\r\n    electro_dmg_: elemDMG5,\r\n    hydro_dmg_: elemDMG5,\r\n    pyro_dmg_: elemDMG5,\r\n    cryo_dmg_: elemDMG5,\r\n    dendro_dmg_: elemDMG5,\r\n  },\r\n  4: {\r\n    hp: [\r\n      645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657,\r\n      2839, 3022, 3205, 3388, 3571,\r\n    ],\r\n    hp_: elemDMG4,\r\n    atk: [\r\n      42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221,\r\n      232,\r\n    ],\r\n    atk_: elemDMG4,\r\n    def_: phyDMG4,\r\n    eleMas: [\r\n      25.2, 32.3, 39.4, 46.6, 53.7, 60.8, 68.0, 75.1, 82.2, 89.4, 96.5, 103.6,\r\n      110.8, 117.9, 125.0, 132.2, 139.3,\r\n    ],\r\n    enerRech_: [\r\n      7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8,\r\n      30.8, 32.8, 34.7, 36.7, 38.7,\r\n    ],\r\n    heal_: [\r\n      4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3,\r\n      22.7, 24.0, 25.4, 26.8,\r\n    ],\r\n    critRate_: [\r\n      4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5,\r\n      19.7, 20.8, 22.0, 23.2,\r\n    ],\r\n    critDMG_: [\r\n      8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5,\r\n      36.9, 39.3, 41.7, 44.1, 46.4,\r\n    ],\r\n    physical_dmg_: phyDMG4,\r\n    anemo_dmg_: elemDMG4,\r\n    geo_dmg_: elemDMG4,\r\n    electro_dmg_: elemDMG4,\r\n    hydro_dmg_: elemDMG4,\r\n    pyro_dmg_: elemDMG4,\r\n    cryo_dmg_: elemDMG4,\r\n    dendro_dmg_: elemDMG4,\r\n  },\r\n  3: {\r\n    hp: [\r\n      430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893,\r\n    ],\r\n    hp_: elemDMG3,\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    atk_: elemDMG3,\r\n    def_: phyDMG3,\r\n    eleMas: [\r\n      21.0, 26.9, 32.9, 38.8, 44.8, 50.7, 56.7, 62.6, 68.5, 74.5, 80.4, 86.4,\r\n      92.3,\r\n    ],\r\n    enerRech_: [\r\n      5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6,\r\n    ],\r\n    heal_: [\r\n      4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8,\r\n    ],\r\n    critRate_: [\r\n      3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4,\r\n    ],\r\n    critDMG_: [\r\n      7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8,\r\n      30.8,\r\n    ],\r\n    physical_dmg_: phyDMG3,\r\n    anemo_dmg_: elemDMG3,\r\n    geo_dmg_: elemDMG3,\r\n    electro_dmg_: elemDMG3,\r\n    hydro_dmg_: elemDMG3,\r\n    pyro_dmg_: elemDMG3,\r\n    cryo_dmg_: elemDMG3,\r\n    dendro_dmg_: elemDMG3,\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551],\r\n    hp_: elemDMG2,\r\n    atk: [17, 22, 26, 31, 36],\r\n    atk_: elemDMG2,\r\n    def_: phyDMG2,\r\n    eleMas: [16.8, 21.5, 26.3, 31.1, 35.8],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9],\r\n    physical_dmg_: phyDMG2,\r\n    anemo_dmg_: elemDMG2,\r\n    geo_dmg_: elemDMG2,\r\n    electro_dmg_: elemDMG2,\r\n    hydro_dmg_: elemDMG2,\r\n    pyro_dmg_: elemDMG2,\r\n    cryo_dmg_: elemDMG2,\r\n    dendro_dmg_: elemDMG2,\r\n  },\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    hp_: elemDMG1,\r\n    atk: [8, 12, 15, 18, 21],\r\n    atk_: elemDMG1,\r\n    def_: phyDMG1,\r\n    eleMas: [12.6, 17.3, 22.1, 26.9, 31.6],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    physical_dmg_: phyDMG1,\r\n    anemo_dmg_: elemDMG1,\r\n    geo_dmg_: elemDMG1,\r\n    electro_dmg_: elemDMG1,\r\n    hydro_dmg_: elemDMG1,\r\n    pyro_dmg_: elemDMG1,\r\n    cryo_dmg_: elemDMG1,\r\n    dendro_dmg_: elemDMG1,\r\n  },\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, Card, Grid, Typography, useTheme } from \"@mui/material\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { Artifact } from \"../../utils/class/Artifact\";\r\nimport { EditorContext } from \"../../utils/contexts/EditorContext\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { toSortKeyScore } from \"../../utils/func/Sort\";\r\nimport { StatIcon } from \"../atoms/StatIcon\";\r\nimport { ArtifactType } from \"../../utils/types/Artifact\";\r\nimport { mainstatValueTable } from \"../../utils/consts/Mainstat\";\r\n\r\ntype ArtifactCardProps = {\r\n  targetId: string;\r\n  artifact: ArtifactType;\r\n};\r\n\r\nconst ArtifactCard = (props: ArtifactCardProps) => {\r\n  const { targetId, artifact } = props;\r\n  const theme = useTheme();\r\n  const { editor, sort, weight } = useContext(EditorContext);\r\n\r\n  const scores = useMemo(\r\n    () => new Artifact(weight, artifact).getScores(),\r\n    [weight, artifact]\r\n  );\r\n\r\n  return (\r\n    // minWidth: 304, flexGrow: 1, height: 240\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Card\r\n        // sx={{ flex: \"1 1 304px\", maxWidth: 400 }}\r\n        onClick={() => editor.change(true, targetId)}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          gap={1}\r\n          position=\"relative\"\r\n          overflow=\"hidden\"\r\n          sx={{ background: theme.palette.com.artifactBg, p: 1 }}\r\n        >\r\n          {artifact.setKey !== undefined && artifact.slotKey !== undefined ? (\r\n            <img\r\n              style={{ position: \"absolute\", top: -16, right: \"0\", width: 192 }}\r\n              src={`Artifacts/${artifact.setKey}/${artifact.slotKey}.png`}\r\n              alt={\"artifact preview\"}\r\n            />\r\n          ) : undefined}\r\n          <Typography\r\n            css={[fontTypes(theme).title, { color: theme.palette.com.white }]}\r\n          >\r\n            {scores[toSortKeyScore(sort.key)].toFixed(1)}\r\n          </Typography>\r\n          <Typography\r\n            css={[\r\n              fontTypes(theme).body,\r\n              { color: theme.palette.com.whiteOp70 },\r\n            ]}\r\n          >\r\n            {`${scores.minScore.toFixed(1)} ~ ${scores.avgScore.toFixed(\r\n              1\r\n            )} ~ ${scores.maxScore.toFixed(1)}`}\r\n          </Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            alignSelf=\"flex-start\"\r\n            px={0.75}\r\n            py={0.25}\r\n            borderRadius={1}\r\n            sx={{\r\n              background:\r\n                theme.palette.com.scale[\r\n                  10 + Math.floor(artifact.level / 4) * 10\r\n                ],\r\n            }}\r\n          >\r\n            <Typography\r\n              css={[\r\n                fontTypes(theme).disc,\r\n                { color: theme.palette.com.black, fontWeight: 700 },\r\n              ]}\r\n            >\r\n              +{artifact.level}\r\n            </Typography>\r\n          </Box>\r\n          {artifact.mainStatKey !== undefined &&\r\n          artifact.rarity !== undefined ? (\r\n            <StatIcon\r\n              statKey={artifact.mainStatKey}\r\n              value={\r\n                mainstatValueTable[artifact.rarity][artifact.mainStatKey][\r\n                  artifact.level\r\n                ]\r\n              }\r\n              size={16}\r\n              sx={{ color: theme.palette.com.white }}\r\n              full\r\n            />\r\n          ) : undefined}\r\n        </Box>\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          gap={1}\r\n          color={theme.palette.text.secondary}\r\n          sx={{ background: theme.palette.local.paper, p: 1 }}\r\n        >\r\n          {artifact.substats.map((substat, i) =>\r\n            substat.key !== \"\" ? (\r\n              <StatIcon\r\n                key={i}\r\n                statKey={substat.key}\r\n                value={substat.value}\r\n                size={16}\r\n                full\r\n              />\r\n            ) : (\r\n              <Box key={i} height={20} />\r\n            )\r\n          )}\r\n        </Box>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ArtifactCard;\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { TFunction } from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { statDef, statKeyType } from \"../../utils/consts/Stat\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport FontAwesomeSvgIcon from \"./FontAwesomeSvgIcon\";\r\nimport artifacts from \"../../utils/consts/genshindb-partial.json\";\r\nimport { setKeyType } from \"../../utils/consts/Artifact\";\r\n\r\ntype SetIconProps = {\r\n  setKey: setKeyType;\r\n  size?: number;\r\n};\r\n\r\nexport const SetIcon = (props: SetIconProps) => {\r\n  let { setKey, size } = props;\r\n  const theme = useTheme();\r\n  const { t, i18n } = useTranslation(\"artifact\");\r\n  if (size === undefined) size = 14;\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      gap={1}\r\n      height={size * 2}\r\n      fontSize={size}\r\n    >\r\n      {setKey !== \"\" ? (\r\n        <img\r\n          alt=\"artifact set\"\r\n          src={`Artifacts/${setKey}/${\r\n            artifacts[setKey][\"flower\"] !== undefined ? \"flower\" : \"circlet\"\r\n          }.png`}\r\n          width={size * 3}\r\n        />\r\n      ) : undefined}\r\n      <Typography\r\n        css={[fontTypes(theme).disc, { color: \"inherit\", fontSize: \"inherit\" }]}\r\n      >\r\n        {artifacts[setKey].name[i18n.language.substring(0, 2)]}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SxProps,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { NumberOption } from \"./NumberOption\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { substatKey, substatKeyType } from \"../../utils/consts/Substat\";\r\nimport { statDef, statKeyType } from \"../../utils/consts/Stat\";\r\nimport { StatIcon } from \"../atoms/StatIcon\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CSSProperties } from \"react\";\r\nimport { setKey, setKeyType } from \"../../utils/consts/Artifact\";\r\nimport artifacts from \"../../utils/consts/genshindb-partial.json\";\r\nimport { SetIcon } from \"../atoms/SetIcon\";\r\n\r\ntype SetInputProps = {\r\n  setSet: (value: setKeyType) => void;\r\n  set: setKeyType;\r\n  sx?: SxProps;\r\n};\r\n\r\nexport const SetInput = (props: SetInputProps) => {\r\n  const { setSet, set, sx } = props;\r\n  const theme = useTheme();\r\n  const { t } = useTranslation(\"artifact\");\r\n  const r = Math.random();\r\n  return (\r\n    <FormControl variant=\"standard\" sx={sx}>\r\n      <InputLabel\r\n        id={`stat-input${r}-label`}\r\n        css={[fontTypes(theme).disc, { color: theme.palette.com.white }]}\r\n        sx={{ pl: 1.5, pt: 0.5, zIndex: 1, pointerEvents: \"none\" }}\r\n      >\r\n        {t(\"set\")}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={`stat-input${r}-label`}\r\n        id={`stat-input${r}`}\r\n        value={set}\r\n        variant=\"standard\"\r\n        size=\"small\"\r\n        label={t(\"set\")}\r\n        css={[fontTypes(theme).disc, { color: theme.palette.com.white }]}\r\n        sx={{\r\n          bgcolor:\r\n            set === \"\"\r\n              ? theme.palette.com.main[500]\r\n              : theme.palette.com.main.L500,\r\n          pl: 1.5,\r\n          pt: 0.5,\r\n          borderRadius: 0.5,\r\n          color: theme.palette.com.white,\r\n          height: 32,\r\n        }}\r\n        onChange={(e) =>\r\n          e.target.value !== undefined && setSet(e.target.value as setKeyType)\r\n        }\r\n        disableUnderline\r\n      >\r\n        {setKey.map((key, i) => {\r\n          return (\r\n            <MenuItem\r\n              key={i}\r\n              value={key}\r\n              css={fontTypes(theme).disc}\r\n              sx={{ minHeight: 0, display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              {\r\n                // <Typography>{artifacts[key].name.ja}</Typography>\r\n                <SetIcon setKey={key} />\r\n              }\r\n              {/* {substatDef[key].name} */}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EditorContext } from \"../../utils/contexts/EditorContext\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { SortKey } from \"../../utils/types/Sort\";\r\nimport { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowUpShortWide,\r\n  faArrowUpWideShort,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const SortInput = () => {\r\n  const { t } = useTranslation(\"editor\");\r\n  const theme = useTheme();\r\n  const disc = fontTypes(theme).disc;\r\n  const { sort, setSort } = useContext(EditorContext);\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexWrap=\"wrap\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"flex-end\"\r\n      flexGrow={1}\r\n      gap={1}\r\n    >\r\n      <Typography css={[disc, { color: theme.palette.local.black }]}>\r\n        {t(\"artifacts.sortBy\")}:\r\n      </Typography>\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        aria-label=\"outlined primary button group\"\r\n        sx={{ height: 32 }}\r\n      >\r\n        <FormControl variant=\"standard\">\r\n          <Select\r\n            label=\"Key\"\r\n            value={sort.key}\r\n            onChange={(e) => {\r\n              sort.key = e.target.value as SortKey;\r\n              setSort({ ...sort });\r\n            }}\r\n            css={[disc, { color: theme.palette.com.white }]}\r\n            sx={{\r\n              width: 112,\r\n              height: \"100%\",\r\n              background: theme.palette.primary.main,\r\n              pl: 1,\r\n              borderTopLeftRadius: 4,\r\n              borderBottomLeftRadius: 4,\r\n            }}\r\n            disableUnderline\r\n          >\r\n            <MenuItem css={disc} value=\"minScore\">\r\n              {t(\"filters.minScore\")}\r\n            </MenuItem>\r\n            <MenuItem css={disc} value=\"avgScore\">\r\n              {t(\"filters.avgScore\")}\r\n            </MenuItem>\r\n            <MenuItem css={disc} value=\"maxScore\">\r\n              {t(\"filters.maxScore\")}\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          startIcon={\r\n            <FontAwesomeIcon\r\n              icon={sort.desc ? faArrowUpWideShort : faArrowUpShortWide}\r\n            />\r\n          }\r\n          onClick={() => {\r\n            sort.desc = !sort.desc;\r\n            setSort({ ...sort });\r\n          }}\r\n          sx={{\r\n            textTransform: \"none\",\r\n            borderTopLeftRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n          }}\r\n        >\r\n          {sort.desc ? t(\"order.desc\") : t(\"order.asc\")}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  faCirclet,\r\n  faFlower,\r\n  faGoblet,\r\n  faPlume,\r\n  faSands,\r\n} from \"../../components/atoms/faIcons\";\r\n\r\nexport const slotDef = {\r\n  flower: { icon: faFlower },\r\n  plume: { icon: faPlume },\r\n  sands: { icon: faSands },\r\n  goblet: { icon: faGoblet },\r\n  circlet: { icon: faCirclet },\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { faArrowUpWideShort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useState } from \"react\";\r\nimport { slotKey, slotKeyType } from \"../../utils/consts/Artifact\";\r\nimport { slotDef } from \"../../utils/consts/Slot\";\r\nimport FontAwesomeSvgIcon from \"../atoms/FontAwesomeSvgIcon\";\r\nimport chroma from \"chroma-js\";\r\n\r\ntype SlotOptionProps = {\r\n  slot: slotKeyType[];\r\n  setSlot: (value: slotKeyType[]) => void;\r\n};\r\n\r\n//Display value will be rounded!\r\n//x < 10 digit 1 after decimal point\r\n//x > 10 integer\r\n\r\nexport const SlotOption = (props: SlotOptionProps) => {\r\n  const { slot, setSlot } = props;\r\n  const theme = useTheme();\r\n  const disc = css([\r\n    fontTypes(theme).disc,\r\n    { textTransform: \"none\", color: theme.palette.com.white },\r\n  ]);\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      aria-label=\"outlined primary button group\"\r\n      value={slot}\r\n      exclusive\r\n      onChange={(e, newValue) => {\r\n        slot.length !== 5 && slot.includes(newValue)\r\n          ? setSlot([\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"])\r\n          : setSlot([newValue]);\r\n      }}\r\n      sx={{ height: 32, flexGrow: 1 }}\r\n      css={disc}\r\n    >\r\n      {slotKey.map((option, i) => (\r\n        <ToggleButton\r\n          key={i}\r\n          value={option}\r\n          css={{\r\n            \"&.Mui-selected\": {\r\n              background: theme.palette.com.main[\"L500\"],\r\n              \":hover\": {\r\n                background: chroma(theme.palette.com.main[\"L500\"])\r\n                  .darken()\r\n                  .hex(),\r\n              },\r\n              \":focus\": { background: theme.palette.com.main[\"L500\"] },\r\n            },\r\n          }}\r\n          sx={{\r\n            \":hover\": {\r\n              bgcolor: chroma(theme.palette.com.main[\"L500\"]).darken().hex(),\r\n            },\r\n            \":focus\": { bgcolor: \"inherit\" },\r\n\r\n            borderRadius: i === 0 ? 0 : \"inherit\",\r\n            flexGrow: 1,\r\n            px: 0,\r\n          }}\r\n        >\r\n          <FontAwesomeSvgIcon\r\n            icon={slotDef[option].icon}\r\n            fontSize=\"small\"\r\n            style={{ color: theme.palette.com.white }}\r\n          />\r\n        </ToggleButton>\r\n      ))}\r\n    </ToggleButtonGroup>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, useTheme } from \"@mui/material\";\r\nimport { statKeyType } from \"../../utils/consts/Stat\";\r\nimport { NumberInput } from \"../atoms/NumberInput\";\r\nimport { StatIcon } from \"../atoms/StatIcon\";\r\n\r\ntype WeightInputProps = {\r\n  statKey: statKeyType;\r\n  value: number;\r\n  setValue: (value: number) => void;\r\n};\r\nexport const WeightInput = ({ statKey, value, setValue }: WeightInputProps) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box display=\"flex\" borderRadius={1}>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"centers\"\r\n        bgcolor={theme.palette.com.main[500]}\r\n        pl={1}\r\n        minWidth={112}\r\n      >\r\n        <StatIcon statKey={statKey} />\r\n      </Box>\r\n      <NumberInput value={value} setValue={setValue} />\r\n    </Box>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { StyledModal } from \"../molecules/StyledModal\";\r\nimport { useContext } from \"react\";\r\nimport { EditorContext } from \"../../utils/contexts/EditorContext\";\r\nimport { Box, Grid, Typography, useTheme } from \"@mui/material\";\r\nimport { fontTypes } from \"../../utils/styles/fonts\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FormulaDisplay } from \"../molecules/FormulaDisplay\";\r\nimport { substatKey } from \"../../utils/consts/Substat\";\r\nimport { WeightInput } from \"../molecules/WeightInput\";\r\nimport { IconTextButton } from \"../molecules/IconTextButton\";\r\nimport { faFloppyDisk, faRotateLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const FormulaEditor = () => {\r\n  const { formulaEditor, weight, setWeight } = useContext(EditorContext);\r\n  const theme = useTheme();\r\n  const { t } = useTranslation(\"editor\");\r\n  return (\r\n    <StyledModal\r\n      open={formulaEditor.open}\r\n      onClose={() => formulaEditor.setOpen(false)}\r\n    >\r\n      <Typography css={fontTypes(theme).title}>\r\n        {t(\"formula.editorTitle\")}\r\n      </Typography>\r\n      <Typography css={fontTypes(theme).subtitle}>\r\n        {t(\"formula.title\")}\r\n      </Typography>\r\n      <FormulaDisplay />\r\n      <Typography css={fontTypes(theme).subtitle}>\r\n        {t(\"formula.weight\")}\r\n      </Typography>\r\n      <Grid container spacing={1} rowSpacing={1.5}>\r\n        {substatKey.map((key, i) =>\r\n          key !== \"\" ? (\r\n            <Grid item key={i} xs={6}>\r\n              <WeightInput\r\n                statKey={key}\r\n                value={weight[key]}\r\n                setValue={(value) => {\r\n                  weight[key] = value;\r\n                  setWeight({ ...weight });\r\n                }}\r\n              />\r\n            </Grid>\r\n          ) : undefined\r\n        )}\r\n      </Grid>\r\n      <Box display=\"flex\" gap={1} justifyContent=\"flex-end\" mt={2.5}>\r\n        <IconTextButton\r\n          text={t(\"common:action.reset\")!}\r\n          icon={faRotateLeft}\r\n          color={theme.palette.error.dark}\r\n          onClick={() => {\r\n            setWeight({\r\n              hp: 0,\r\n              atk: 0,\r\n              def: 0,\r\n              hp_: 0,\r\n              atk_: 1,\r\n              def_: 0,\r\n              eleMas: 0,\r\n              enerRech_: 0,\r\n              critRate_: 2,\r\n              critDMG_: 1,\r\n              \"\": 0,\r\n            });\r\n          }}\r\n        />\r\n        <IconTextButton\r\n          text={t(\"common:action.save\")!}\r\n          icon={faFloppyDisk}\r\n          color={theme.palette.success.dark}\r\n          onClick={() => formulaEditor.setOpen(false)}\r\n        />\r\n      </Box>\r\n    </StyledModal>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { Box, Grid, Pagination, Typography, useTheme } from \"@mui/material\";\r\nimport { useContext, useMemo, useState, Suspense, lazy } from \"react\";\r\nimport { fontTypes } from \"../utils/styles/fonts\";\r\nimport { RangeInput } from \"../components/molecules/RangeInput\";\r\nimport { IconTextButton } from \"../components/molecules/IconTextButton\";\r\nimport { faAdd, faRotateLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EditorContext } from \"../utils/contexts/EditorContext\";\r\nimport { FormulaDisplay } from \"../components/molecules/FormulaDisplay\";\r\nimport { ArtifactsContext } from \"../utils/contexts/ArtifactsContext\";\r\nimport ArtifactCard from \"../components/organisms/ArtifactCard\";\r\nimport { ArtifactComparator, ArtifactFilter } from \"../utils/reducers/Artifact\";\r\nimport { toSortKeyScore } from \"../utils/func/Sort\";\r\nimport { mainstatKey } from \"../utils/consts/Mainstat\";\r\nimport { StatKeyInput } from \"../components/molecules/SubstatInput\";\r\nimport { SetInput } from \"../components/molecules/SetInput\";\r\nimport { SortInput } from \"../components/organisms/SortInput\";\r\nimport { SlotOption } from \"../components/molecules/SlotOptions\";\r\nimport { FormulaEditor } from \"../components/organisms/FormulaEditor\";\r\nconst ArtifactEditor = lazy(\r\n  () => import(\"../components/organisms/ArtifactEditor\")\r\n);\r\n\r\nconst Editor = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation([\"editor\", \"common\", \"artifact\"]);\r\n  const { editor, sort, filter, setFilter, weight } = useContext(EditorContext);\r\n  const { artifacts } = useContext(ArtifactsContext);\r\n  const [page, setPage] = useState(1);\r\n  const pageN = 24;\r\n\r\n  //original artifacts should not be changed\r\n  const filtered = useMemo(() => {\r\n    return [...artifacts]\r\n      .filter((a) => ArtifactFilter(weight, a, filter, sort))\r\n      .sort((a, b) => ArtifactComparator(weight, a, b, sort));\r\n  }, [artifacts, filter, sort, weight]);\r\n\r\n  const artifactsRendered = useMemo(() => {\r\n    return filtered\r\n      .slice((page - 1) * pageN, page * pageN)\r\n      .map((artifact, id) => (\r\n        <ArtifactCard targetId={artifact.id!} key={id} artifact={artifact} />\r\n      ));\r\n  }, [filtered, page]);\r\n\r\n  return (\r\n    <Box>\r\n      <Suspense>\r\n        <ArtifactEditor />\r\n      </Suspense>\r\n      <FormulaEditor />\r\n      <Box display=\"flex\" flexDirection=\"column\" gap={1.5}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <Typography css={fontTypes(theme).title}>\r\n            {t(\"filter.title\")}\r\n          </Typography>\r\n          <Box display=\"flex\" gap={2} alignItems=\"baseline\">\r\n            <Typography css={[fontTypes(theme).body]}>\r\n              {t(\"filter.filtered\")} {filtered.length}/{artifacts.length}\r\n            </Typography>\r\n            <IconTextButton\r\n              text={t(\"common:action.reset\")!}\r\n              icon={faRotateLeft}\r\n              color={theme.palette.error.dark}\r\n              onClick={() =>\r\n                setFilter({\r\n                  level: [0, 20],\r\n                  score: [0, 61],\r\n                  slot: [\"flower\", \"plume\", \"sands\", \"goblet\", \"circlet\"],\r\n                  set: \"\",\r\n                  mainstat: \"\",\r\n                })\r\n              }\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        <RangeInput\r\n          name={t(\"artifact.level\")}\r\n          min={0}\r\n          max={20}\r\n          value={filter.level}\r\n          setValue={(value) => {\r\n            filter.level = value;\r\n            setFilter({ ...filter });\r\n          }}\r\n        />\r\n        <RangeInput\r\n          name={t(`filters.${toSortKeyScore(sort.key)}`)}\r\n          min={0}\r\n          max={61}\r\n          value={filter.score} //target automatically change based on sort\r\n          setValue={(value) => {\r\n            filter.score = value;\r\n            setFilter({ ...filter });\r\n          }}\r\n        />\r\n        <SlotOption\r\n          slot={filter.slot}\r\n          setSlot={(value) => {\r\n            filter.slot = value;\r\n            setFilter({ ...filter });\r\n          }}\r\n        />\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            <StatKeyInput\r\n              sx={{ width: \"100%\" }}\r\n              label={t(\"artifact:mainstat\")!}\r\n              keys={mainstatKey}\r\n              key_={filter.mainstat}\r\n              setKey={(value) => {\r\n                filter.mainstat = value;\r\n                setFilter({ ...filter });\r\n              }}\r\n              full\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <SetInput\r\n              sx={{ width: \"100%\" }}\r\n              set={filter.set}\r\n              setSet={(value) => {\r\n                filter.set = value;\r\n                setFilter({ ...filter });\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Typography css={fontTypes(theme).title}>\r\n          {t(\"formula.title\")}\r\n        </Typography>\r\n        <FormulaDisplay />\r\n\r\n        <Typography css={fontTypes(theme).title}>\r\n          {t(\"artifacts.title\")}\r\n        </Typography>\r\n        <Box\r\n          display=\"flex\"\r\n          flexWrap=\"wrap\"\r\n          gap={1}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Pagination\r\n            page={page}\r\n            onChange={(e, value) => setPage(value)}\r\n            count={Math.ceil(filtered.length / pageN)}\r\n            color=\"primary\"\r\n          />\r\n          <SortInput />\r\n        </Box>\r\n        <IconTextButton\r\n          text={t(\"artifacts.addNew\")!}\r\n          icon={faAdd}\r\n          color={theme.palette.success.dark}\r\n          onClick={() => editor.change(true)}\r\n        />\r\n        <Grid container spacing={1.5}>\r\n          {artifactsRendered}\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Editor;\r\n","export const setKey = [\r\n  \"\",\r\n  \"Adventurer\", //Adventurer\r\n  \"ArchaicPetra\", //Archaic Petra\r\n  \"Berserker\", //Berserker\r\n  \"BlizzardStrayer\", //Blizzard Strayer\r\n  \"BloodstainedChivalry\", //Bloodstained Chivalry\r\n  \"BraveHeart\", //Brave Heart\r\n  \"CrimsonWitchOfFlames\", //Crimson Witch of Flames\r\n  \"DeepwoodMemories\", //Deepwood Memories\r\n  \"DefendersWill\", //Defender's Will\r\n  \"DesertPavilionChronicle\", //Desert Pavilion Chronicle\r\n  \"EchoesOfAnOffering\", //Echoes of an Offering\r\n  \"EmblemOfSeveredFate\", //Emblem of Severed Fate\r\n  \"FlowerOfParadiseLost\", //Flower of Paradise Lost\r\n  \"Gambler\", //Gambler\r\n  \"GildedDreams\", //Gilded Dreams\r\n  \"GladiatorsFinale\", //Gladiator's Finale\r\n  \"HeartOfDepth\", //Heart of Depth\r\n  \"HuskOfOpulentDreams\", //Husk of Opulent Dreams\r\n  \"Instructor\", //Instructor\r\n  \"Lavawalker\", //Lavawalker\r\n  \"LuckyDog\", //Lucky Dog\r\n  \"MaidenBeloved\", //Maiden Beloved\r\n  \"MartialArtist\", //Martial Artist\r\n  \"NoblesseOblige\", //Noblesse Oblige\r\n  \"OceanHuedClam\", //Ocean-Hued Clam\r\n  \"PaleFlame\", //Pale Flame\r\n  \"PrayersForDestiny\", //Prayers for Destiny\r\n  \"PrayersForIllumination\", //Prayers for Illumination\r\n  \"PrayersForWisdom\", //Prayers for Wisdom\r\n  \"PrayersToSpringtime\", //Prayers to Springtime\r\n  \"ResolutionOfSojourner\", //Resolution of Sojourner\r\n  \"RetracingBolide\", //Retracing Bolide\r\n  \"Scholar\", //Scholar\r\n  \"ShimenawasReminiscence\", //Shimenawa's Reminiscence\r\n  \"TenacityOfTheMillelith\", //Tenacity of the Millelith\r\n  \"TheExile\", //The Exile\r\n  \"ThunderingFury\", //Thundering Fury\r\n  \"Thundersoother\", //Thundersoother\r\n  \"TinyMiracle\", //Tiny Miracle\r\n  \"TravelingDoctor\", //Traveling Doctor\r\n  \"VermillionHereafter\", //Vermillion Hereafter\r\n  \"ViridescentVenerer\", //Viridescent Venerer\r\n  \"WanderersTroupe\",\r\n] as const;\r\nexport type setKeyType = (typeof setKey)[number];\r\n\r\nexport const slotKey = [\r\n  \"flower\",\r\n  \"plume\",\r\n  \"sands\",\r\n  \"goblet\",\r\n  \"circlet\",\r\n] as const;\r\nexport type slotKeyType = (typeof slotKey)[number];\r\n\r\n//Wanderer's Troupe\r\n//   Adventurer: { name: { en: \"Adventurer\", ja: \"\" } },\r\n//   ArchaicPetra: { name: { en: \"Archaic Petra\", ja: \"\" } },\r\n//   Berserker: { name: { en: \"Berserker\", ja: \"\" } },\r\n//   BlizzardStrayer: { name: { en: \"Blizzard Strayer\", ja: \"\" } },\r\n//   BloodstainedChivalry: { name: { en: \"Bloodstained Chivalry\", ja: \"\" } },\r\n//   BraveHeart: { name: { en: \"Brave Heart\", ja: \"\" } },\r\n//   CrimsonWitchOfFlames: { name: { en: \"Crimson Witch of Flames\", ja: \"\" } },\r\n//   DeepwoodMemories: { name: { en: \"Deepwood Memories\", ja: \"\" } },\r\n//   DefendersWill: { name: { en: \"Defender's Will\", ja: \"\" } },\r\n//   DesertPavilionChronicle: {\r\n//     name: { en: \"Desert Pavilion Chronicle\", ja: \"\" },\r\n//   },\r\n//   EchoesOfAnOffering: { name: { en: \"Echoes of an Offering\", ja: \"\" } },\r\n//   EmblemOfSeveredFate: { name: { en: \"Emblem of Severed Fate\", ja: \"\" } },\r\n//   FlowerOfParadiseLost: { name: { en: \"Flower of Paradise Lost\", ja: \"\" } },\r\n//   Gambler: { name: { en: \"Gambler\", ja: \"\" } },\r\n//   GildedDreams: { name: { en: \"Gilded Dreams\", ja: \"\" } },\r\n//   GladiatorsFinale: { name: { en: \"Gladiator's Finale\", ja: \"\" } },\r\n//   HeartOfDepth: { name: { en: \"Heart of Depth\", ja: \"\" } },\r\n//   HuskOfOpulentDreams: { name: { en: \"Husk of Opulent Dreams\", ja: \"\" } },\r\n//   Instructor: { name: { en: \"Instructor\", ja: \"\" } },\r\n//   Lavawalker: { name: { en: \"Lavawalker\", ja: \"\" } },\r\n//   LuckyDog: { name: { en: \"Lucky Dog\", ja: \"\" } },\r\n//   MaidenBeloved: { name: { en: \"Maiden Beloved\", ja: \"\" } },\r\n//   MartialArtist: { name: { en: \"Martial Artist\", ja: \"\" } },\r\n//   NoblesseOblige: { name: { en: \"Noblesse Oblige\", ja: \"\" } },\r\n//   OceanHuedClam: { name: { en: \"Ocean-Hued Clam\", ja: \"\" } },\r\n//   PaleFlame: { name: { en: \"Pale Flame\", ja: \"\" } },\r\n//   PrayersForDestiny: { name: { en: \"Prayers for Destiny\", ja: \"\" } },\r\n//   PrayersForIllumination: { name: { en: \"Prayers for Illumination\", ja: \"\" } },\r\n//   PrayersForWisdom: { name: { en: \"Prayers for Wisdom\", ja: \"\" } },\r\n//   PrayersToSpringtime: { name: { en: \"Prayers to Springtime\", ja: \"\" } },\r\n//   ResolutionOfSojourner: { name: { en: \"Resolution of Sojourner\", ja: \"\" } },\r\n//   RetracingBolide: { name: { en: \"Retracing Bolide\", ja: \"\" } },\r\n//   Scholar: { name: { en: \"Scholar\", ja: \"\" } },\r\n//   ShimenawasReminiscence: { name: { en: \"Shimenawa's Reminiscence\", ja: \"\" } },\r\n//   TenacityOfTheMillelith: { name: { en: \"Tenacity of the Millelith\", ja: \"\" } },\r\n//   TheExile: { name: { en: \"The Exile\", ja: \"\" } },\r\n//   ThunderingFury: { name: { en: \"Thundering Fury\", ja: \"\" } },\r\n//   Thundersoother: { name: { en: \"Thundersoother\", ja: \"\" } },\r\n//   TinyMiracle: { name: { en: \"Tiny Miracle\", ja: \"\" } },\r\n//   TravelingDoctor: { name: { en: \"Traveling Doctor\", ja: \"\" } },\r\n//   VermillionHereafter: { name: { en: \"Vermillion Hereafter\", ja: \"\" } },\r\n//   ViridescentVenerer: { name: { en: \"Viridescent Venerer\", ja: \"\" } },\r\n//   WanderersTroupe: { name: { en: \"Wanderer's Troupe\", ja: \"\" } },\r\n// };\r\n"],"names":["NumberInput","value","setValue","min","max","sx","theme","useTheme","useState","inValue","setInValue","type","variant","style","background","palette","local","paper","paddingLeft","paddingRight","borderRadius","css","fontTypes","disc","isNaN","onChange","e","parseFloat","target","onFocus","event","select","InputProps","disableUnderline","inputProps","inputMode","StatIcon","props","statKey","size","full","text","t","undefined","charAt","length","slice","toFixed","StatValue2Str","useTranslation","display","alignItems","gap","fontSize","statDef","icon","color","NumberOption","options","displayRaw","textTransform","com","white","DisplayRounded","height","flexGrow","width","map","option","i","onClick","Math","round","InputRounded","bgcolor","main","bg","px","StatKeyInput","setKey","key_","keys","label","r","random","id","pl","pt","zIndex","pointerEvents","disableAnimation","labelId","L500","substatKey","key","minHeight","SubstatInput","mb","table","RangeInput","name","Box","Typography","minWidth","Slider","step","newValue","valueLabelDisplay","FormulaDisplay","useContext","EditorContext","weight","formulaEditor","scoreFormula","useMemo","firstTime","w","headStr","py","cursor","setOpen","toSortKeyScore","mainstatKey","elemDMG5","phyDMG5","elemDMG4","phyDMG4","elemDMG3","phyDMG3","elemDMG2","phyDMG2","elemDMG1","phyDMG1","mainstatValueTable","hp","hp_","atk","atk_","def_","eleMas","enerRech_","heal_","critRate_","critDMG_","physical_dmg_","anemo_dmg_","geo_dmg_","electro_dmg_","hydro_dmg_","pyro_dmg_","cryo_dmg_","dendro_dmg_","targetId","artifact","editor","sort","scores","Artifact","getScores","Grid","item","xs","sm","md","Card","change","flexDirection","position","overflow","artifactBg","p","slotKey","top","right","src","alt","title","body","whiteOp70","minScore","avgScore","maxScore","alignSelf","scale","floor","level","black","fontWeight","mainStatKey","rarity","secondary","substats","substat","SetIcon","i18n","artifacts","language","substring","SetInput","setSet","set","FormControl","InputLabel","Select","MenuItem","SortInput","setSort","flexWrap","justifyContent","ButtonGroup","primary","borderTopLeftRadius","borderBottomLeftRadius","Button","startIcon","desc","faArrowUpWideShort","faArrowUpShortWide","slotDef","flower","faFlower","plume","faPlume","sands","faSands","goblet","faGoblet","circlet","faCirclet","SlotOption","slot","setSlot","ToggleButtonGroup","exclusive","includes","ToggleButton","chroma","darken","hex","FontAwesomeSvgIcon","WeightInput","FormulaEditor","setWeight","StyledModal","open","onClose","subtitle","container","spacing","rowSpacing","mt","IconTextButton","faRotateLeft","error","dark","def","faFloppyDisk","success","ArtifactEditor","lazy","filter","setFilter","ArtifactsContext","page","setPage","filtered","a","ArtifactFilter","b","ArtifactComparator","artifactsRendered","Suspense","score","mainstat","Pagination","count","ceil","faAdd"],"sourceRoot":""}